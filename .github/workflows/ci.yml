name: Continuous integration

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check

  # Test that "cargo package" works. This make sure it's publishable,
  # since we had issues where "cargo build" worked but "package" didn't.
  package:
    name: Package
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - nightly
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: package

  test-versions:
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - nightly
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: test

  test-os:
    name: Test Suite
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # "windows-latest" was removed; see https://github.com/ZcashFoundation/zcash_script/issues/38
        os: [ubuntu-latest, macOS-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      # - name: install LLVM on Linux
      #   if: matrix.os == 'ubuntu-latest'
      #   run: sudo apt-get install llvm-dev libclang-dev clang
      # - name: install LLVM on Mac
      #   if: matrix.os == 'macOS-latest'
      #   run: brew install llvm
      - uses: actions-rs/toolchain@v1
        if: matrix.os == 'windows-latest'
        with:
          target: x86_64-pc-windows-msvc
          toolchain: stable
          profile: minimal
          override: true
      - uses: actions-rs/toolchain@v1
        if: matrix.os != 'windows-latest'
        with:
          toolchain: stable
          profile: minimal
          override: true
      - uses: actions-rs/cargo@v1
        if: matrix.os == 'windows-latest'
        with:
          command: test
          args: --target x86_64-pc-windows-msvc
      - uses: actions-rs/cargo@v1
        if: matrix.os != 'windows-latest'
        with:
          command: test

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
      - run: rustup component add clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

  fuzz:
    name: Fuzz
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - nightly
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
      - run: cargo install cargo-fuzz
      - uses: actions-rs/cargo@v1
        with:
          command: fuzz
          args: run compare -- -max_len=20000 -max_total_time=100
